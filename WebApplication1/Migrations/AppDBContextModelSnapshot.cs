// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.HumanInformation", b =>
                {
                    b.Property<int>("HumanInformationId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Avatar")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonalId")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("HumanInformationId");

                    b.ToTable("HumanInformation");
                });

            modelBuilder.Entity("WebApplication1.Models.LocationInformation", b =>
                {
                    b.Property<int>("LocationInformationID")
                        .HasColumnType("int");

                    b.Property<string>("ApartmentNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationInformationID");

                    b.ToTable("LocationInformation");
                });

            modelBuilder.Entity("WebApplication1.Models.UserInformation", b =>
                {
                    b.Property<int>("UserInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserInformationId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserInformationId");

                    b.ToTable("UserInformation");
                });

            modelBuilder.Entity("WebApplication1.Models.HumanInformation", b =>
                {
                    b.HasOne("WebApplication1.Models.UserInformation", "UserInformation")
                        .WithOne("HumanInformation")
                        .HasForeignKey("WebApplication1.Models.HumanInformation", "HumanInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserInformation");
                });

            modelBuilder.Entity("WebApplication1.Models.LocationInformation", b =>
                {
                    b.HasOne("WebApplication1.Models.HumanInformation", "HumanInformation")
                        .WithOne("LocationInformation")
                        .HasForeignKey("WebApplication1.Models.LocationInformation", "LocationInformationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HumanInformation");
                });

            modelBuilder.Entity("WebApplication1.Models.HumanInformation", b =>
                {
                    b.Navigation("LocationInformation");
                });

            modelBuilder.Entity("WebApplication1.Models.UserInformation", b =>
                {
                    b.Navigation("HumanInformation");
                });
#pragma warning restore 612, 618
        }
    }
}
